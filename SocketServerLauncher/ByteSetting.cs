using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SocketServerLauncher
{
    class ByteSetting
    {

        #region ○ 변수
        //PLC관련
        public byte[] PLC_RW;
        public byte[] PLC_RW_PRESS;
        public byte[] PLC_RW_LINE;
        public byte[] PLC_RW_LASER;
        public byte[] PLC_RW_X100_WORK_SEQ1;
        public byte[] PLC_RW_X100_WORK_SEQ2;
        public byte[] PLC_RW_C300QTR_WORK_SEQ1;
        public byte[] PLC_RW_C300QTR_WORK_SEQ2;
        public byte[] PLC_RW_C300SUB_WORK_SEQ1;
        public byte[] X100_WELD_WR;
        public byte[] C300QTR_WELD_WR;
        public byte[] X100_WELD_WR2;
        public byte[] C300QTR_WELD_WR2;
        public byte[] WR;
        public byte[] byt_Press2Line;
        public byte[] byt_Press2Line2;

        public byte[] d3004; //test
        public byte[] d3000; //test


        #endregion


        #region ○ 함수
        public ByteSetting()
        {
            #region ○PLC읽기 ( 소스상에서 변수를 변경해서 날려주면됨 )
            PLC_RW = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x00, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x11,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x01,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x25,0x52, 0x57,0x31,0x30,0x30,0x30//변수  %RW1000
            };
            #endregion
            #region ○PRESS읽기
            PLC_RW_PRESS = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x0A, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x1A,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x02,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x25,0x52, 0x57,0x31,0x30,0x30,0x31//수량읽기(기본 1001)
                ,0x07,0x00
                ,0x25,0x52,0x57,0x31,0x32,0x30,0x30//차종읽기(1200)
            };
            #endregion
            #region ○LINE읽기
            PLC_RW_LINE = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x0B, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x62,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x0A,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW

                0x25,0x52, 0x57,0x32,0x30,0x30,0x31//수량읽기(기본 2001)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x33,0x30,0x30,0x31//수량읽기(기본 3001)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x34,0x30,0x30,0x31//수량읽기(기본 4001)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x35,0x30,0x30,0x31//수량읽기(기본 5001)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x36,0x30,0x30,0x31//수량읽기(기본 6001)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x32,0x30,0x31,0x30//차종읽기(2010) 65

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x33,0x30,0x31,0x30//차종읽기(2010)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x34,0x30,0x31,0x30//차종읽기(2010)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x35,0x30,0x31,0x30//차종읽기(2010)

                ,0x07,0x00//변수 길이 2byte 30개
                ,0x25,0x52, 0x57,0x36,0x30,0x31,0x30//차종읽기(2010)
            };
            #endregion
            #region ○LASER읽기
            PLC_RW_LASER = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x0C, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x74,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x0C,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x25,0x52, 0x57,0x37,0x30,0x30,0x31//1LH수량읽기(기본 7001)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x37,0x31,0x30,0x31//1RH수량읽기(기본 7101)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x38,0x30,0x30,0x31//2LH수량읽기(기본 8001)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x38,0x31,0x30,0x31//2RH수량읽기(기본 8101)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x39,0x30,0x30,0x31//3LH수량읽기(기본 9001)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x39,0x31,0x30,0x31//3RH수량읽기(기본 9101)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x37,0x31,0x30,0x30//차종읽기(7100)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x37,0x32,0x30,0x30//차종읽기(7200)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x38,0x31,0x30,0x30//차종읽기(8100)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x38,0x32,0x30,0x30//차종읽기(8200)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x39,0x31,0x30,0x30//차종읽기(9100)
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x39,0x32,0x30,0x30//차종읽기(9200)
            };
            #endregion
            #region ○X100타점 수집
            PLC_RW_X100_WORK_SEQ1 = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x01, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x98,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x10,0x00, // 블록수(16개) 
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x07,0x00,//변수 길이 2byte 30개 28,29bit
                0x25,0x52, 0x57,0x31,0x30,0x30,0x30
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x31
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x32
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x33
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x34
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x35
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x36
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x37
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x38
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x39
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x30
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x31
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x32
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x33
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x34
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x35

            };
            #endregion
            #region ○X100타점 수집2
            PLC_RW_X100_WORK_SEQ2 = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x02, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x47,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x07,0x00, // 블록수(16개) 2byte
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x07,0x00,//변수 길이 2byte 30개
                0x25,0x52, 0x57,0x31,0x30,0x31,0x36
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x37
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x38
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x39
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x32,0x30
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x32,0x31
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x32,0x32
            };
            #endregion
            #region ○C300 QTR 타점 수집 1
            PLC_RW_C300QTR_WORK_SEQ1 = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x01, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x59,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x09,0x00, // 블록수(16개) 
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x07,0x00,//변수 길이 2byte 30개 28,29bit
                0x25,0x52, 0x57,0x31,0x30,0x30,0x30
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x31
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x32
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x33
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x34
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x35
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x36
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x37
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x38

            };

            #endregion
            #region ○C300 QTR 타점 수집 2
            PLC_RW_C300QTR_WORK_SEQ2 = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x02, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x59,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x09,0x00, // 블록수(16개) 
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x07,0x00,//변수 길이 2byte 30개 28,29bit
                0x25,0x52, 0x57,0x31,0x30,0x31,0x30
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x31
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x32
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x33
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x34
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x35
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x36
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x37
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x31,0x38

            };

            #endregion
            #region ○C300 SUB 타점 수집
            PLC_RW_C300SUB_WORK_SEQ1 = new byte[] {
               0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x00, 0x03, // Invoke id(header) 16 ( 14, 15번 bit ) // 별칭 지어주는거임. 
                0x2C,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x04,0x00, // 블록수(16개) 
                //0x25,//0x44,0x42,0x30,//직접 변수 3byte(ex - %RW) = %RW
                0x07,0x00,//변수 길이 2byte 30개 28,29bit
                0x25,0x52, 0x57,0x31,0x30,0x30,0x30
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x31
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x32
                ,0x07,0x00
                ,0x25,0x52, 0x57,0x31,0x30,0x30,0x33

            };

            #endregion
            #region ○ 오토젠 X100 품질데이터에 따른 설비제어 - 정지신호(01) 
            X100_WELD_WR = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33,
                0xFF, 0x00,//invoke
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x01, 0x00,
                    0x01, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion
            #region ○ 오토젠 C300QTR 품질데이터에 따른 설비제어 - 정지신호(01) 
            C300QTR_WELD_WR = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0x01,
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x02, 0x00,
                    0x01, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion
            #region ○ 오토젠 C300SUB 품질데이터에 따른 설비제어 - 정지신호(01) 
            C300QTR_WELD_WR = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0x02,
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x01, 0x00,
                    0x01, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion
            #region ○ 오토젠 X100 품질데이터에 따른 설비제어 - 정지신호(00) 
            X100_WELD_WR2 = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0x03,
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x02, 0x00,
                    0x00, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion
            #region ○ 오토젠 C300QTR 품질데이터에 따른 설비제어 - 정지신호(00) 
            C300QTR_WELD_WR2 = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0x04,
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x01, 0x00,
                    0x00, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion
            #region ○ 오토젠 C300SUB 품질데이터에 따른 설비제어 - 정지신호(00) 
            C300QTR_WELD_WR2 = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0xFF, 0x05,
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x01, 0x00,
                    0x00, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion
            #region ○ 오토젠 프레스 신규설치 가열로 정보 읽어오기 비트값만
            byt_Press2Line = new byte[] {
                0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x99, 0x99, // Invoke id(header) 16
                0x11,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x01,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                0x25,0x44, 0x57,0x31,0x30,0x30,0x30//변수  %DW1000
            };
            #endregion
            #region ○ 오토젠 프레스 신규설치 가열로 정보 읽어오기 밸류값만
            byt_Press2Line2 = new byte[] {
                0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x99, 0x99, // Invoke id(header) 16
                0x11,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x01,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                0x25,0x44, 0x57,0x31,0x30,0x30,0x30//변수  %DW1000
            };
            #endregion

            #region ○ 오토젠 용접모니터링에서 설비제어(NG버튼)
            WR = new byte[] {
                    0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00,
                    0x15,
                    0x00, 0x00, 0x00,
                    0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x25, 0x52, 0x57,
                    0x32, 0x30, 0x30, 0x30,
                    0x01, 0x00,
                    0x01, 0x00 };  // 실제 값 영역 (4) 좌우 바뀜.  12 34 -> 34 12


            //4C 53 49 53 2D 58 47 54 00 00 00 00 00 33 00 00 
            //    15   // 데이터 길이 숫자 (21개 -> Hex)
            //    00 00 00  // 헤더 끝..
            //    58 00 02 00 00 00 01 00 07 00 25 52 57 
            //    32 30 30 30
            //    01 00 
            //    FF FF  // 41
            #endregion




            #region ○ d3004 가열로 정상제품 여부
            d3004 = new byte[] {
                0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x99, 0x99, // Invoke id(header) 16
                0x11,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x01,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                0x25,0x44, 0x57,0x33,0x30,0x30,0x34//변수  %DW3004
            };
            #endregion
            /*
             * 
             * 0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x99, 0x99, // Invoke id(header) 16
                0x11,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝
                0x55, 0x00,
                0x02, 0x00,
                0x00, 0x00,
                0x01,0x00,
                0x02,0x00,
                0x48,0x00
                

             * */

            #region ○ d3000 가열로 정상제품 여부
            d3000 = new byte[] {
                0x4C, 0x53, 0x49, 0x53, 0x2D, 0x58, 0x47, 0x54,//Company ID 8byte
                0x00, 0x00,//Reserved(0x0000 : 예약영역) 2byte
                0x00, 0x00,//PLC Info (클라이언트 -> 서버 = 0x00) 2byte
                0xA0,//CPU Info 1byte
                0x33,//Source of frame ( 클라이언트 -> 서버 : 0x33, 서버 -> 클라이언트 : 0x11)
                0x99, 0x99, // Invoke id(header) 16
                0x11,0x00,//length 2byte
                0x00,//예약영역 1byte // Module Position, Bit0~3 : Ethernet I/F 모듈의 슬롯번호
                                      //                  Bit 4~7 : Ethernet I/F 모듈의 베이스 번호
                0x00,//BCC 1byte
                //헤더 끝

                0x54,0x00, // 명령어(Read Request) 2byte
                0x02,0x00, // 데이터타입 2btte
                0x00,0x00, // 예약영역 2byte
                0x01,0x00, // 블록수(16개) 2byte
                0x07,0x00,//변수 길이 2byte 30개
                0x25,0x44, 0x57,0x33,0x30,0x30,0x30//변수  %DW3000
            };
            #endregion
        }
        #endregion
    }
}
